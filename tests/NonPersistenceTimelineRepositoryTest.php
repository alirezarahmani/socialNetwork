<?php
namespace Test;

use Assert\AssertionFailedException;
use SocialNetwork\Application\Storage\MemcachedCacheStorage;
use SocialNetwork\Infrastructure\Repositories\NonPersistence\TimelineRepository;

class NonPersistenceTimelineRepositoryTest extends SocialNetwork
{
    /** @var TimelineRepository */
    private $repository;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->repository = new TimelineRepository($this->container->get(MemcachedCacheStorage::class));
    }

    public function tearDown()
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
        \Mockery::close();
    }
    /** @test */
    public function should_work_with_storage()
    {
        $this->assertEquals($this->repository->getCacheStorage(), $this->container->get(MemcachedCacheStorage::class));
    }
    /** @test */
    public function should_throw_exception_with_wrong_index_add()
    {
        $index = 'wrong_index';
        $this->expectException(AssertionFailedException::class);
        $this->expectExceptionMessage('wrong cache index, the index: ' . $index . ' not exist!');
        $this->repository->addByIndex($index, []);
    }
    /** @test */
    public function should_throw_exception_with_wrong_filed_add()
    {
        $this->expectExceptionMessage('wrong values to insert, unable to find field:username');
        $this->expectException(AssertionFailedException::class);
        $this->repository->addByIndex(TimelineRepository::TIMELINE_INDEX, ['wrong_filed' => 'hi']);
    }
    /** @test */
    public function should_set_corrent_value()
    {
        $payload = ['username' => 'alireza', 'message' => 'hi there'];
        $this->repository->addByIndex(TimelineRepository::TIMELINE_INDEX, $payload);
        $result = $this->repository->findByIndex(TimelineRepository::TIMELINE_INDEX, 'alireza');
        $this->assertEquals($result[0], $payload);
    }
    /** @test */
    public function should_throw_exception_with_wrong_index_find()
    {
        $index = 'wrong_index';
        $this->expectException(AssertionFailedException::class);
        $this->expectExceptionMessage('wrong cache index, the index: ' . $index . ' not exist!');
        $this->repository->findByIndex($index, []);
    }
}
